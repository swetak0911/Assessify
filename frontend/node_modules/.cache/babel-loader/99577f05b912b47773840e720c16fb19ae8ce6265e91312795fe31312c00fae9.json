{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Assessify\\\\frontend\\\\src\\\\components\\\\InterviewAssistant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Mic, MicOff, Camera, Type, Maximize2, Minimize2, X, Scan } from 'lucide-react';\nimport axios from 'axios';\nimport { toast } from 'sonner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\nconst InterviewAssistant = () => {\n  _s();\n  const [position, setPosition] = useState({\n    x: 100,\n    y: 100\n  });\n  const [size, setSize] = useState({\n    width: 450,\n    height: 600\n  });\n  const [opacity, setOpacity] = useState(0.95);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [activeTab, setActiveTab] = useState('text');\n  const [question, setQuestion] = useState('');\n  const [solution, setSolution] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [modelProvider, setModelProvider] = useState('openai');\n  const [modelName, setModelName] = useState('gpt-5');\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [isTakingScreenshot, setIsTakingScreenshot] = useState(false);\n  const recognitionRef = useRef(null);\n  const windowRef = useRef(null);\n  const sessionId = useRef(`session_${Date.now()}`);\n\n  // Initialize Speech Recognition\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.onresult = event => {\n        let interimTranscript = '';\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; i++) {\n          const transcriptPiece = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            finalTranscript += transcriptPiece + ' ';\n          } else {\n            interimTranscript += transcriptPiece;\n          }\n        }\n        setTranscript(prev => prev + finalTranscript);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error', event.error);\n        toast.error('Speech recognition error: ' + event.error);\n        setIsRecording(false);\n      };\n    }\n  }, []);\n\n  // Dragging handlers\n  const handleMouseDown = e => {\n    if (e.target.closest('.window-header')) {\n      setIsDragging(true);\n      setDragOffset({\n        x: e.clientX - position.x,\n        y: e.clientY - position.y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging) {\n      setPosition({\n        x: e.clientX - dragOffset.x,\n        y: e.clientY - dragOffset.y\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, dragOffset]);\n\n  // Handle Screenshot\n  const handleTakeScreenshot = async () => {\n    try {\n      setIsTakingScreenshot(true);\n      toast.info('Select the window to capture...');\n\n      // Request screen capture\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          mediaSource: 'screen'\n        }\n      });\n\n      // Create video element to capture frame\n      const video = document.createElement('video');\n      video.srcObject = stream;\n      video.play();\n\n      // Wait for video to be ready\n      await new Promise(resolve => {\n        video.onloadedmetadata = resolve;\n      });\n\n      // Capture screenshot\n      const canvas = document.createElement('canvas');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0);\n\n      // Stop the stream\n      stream.getTracks().forEach(track => track.stop());\n\n      // Convert to base64 and send to OCR\n      const imageData = canvas.toDataURL('image/png');\n      const response = await axios.post(`${API}/ocr-image`, {\n        image_base64: imageData\n      });\n      setQuestion(response.data.extracted_text);\n      toast.success('Screenshot captured and text extracted!');\n      setIsTakingScreenshot(false);\n    } catch (error) {\n      console.error('Screenshot error:', error);\n      toast.error('Failed to capture screenshot: ' + error.message);\n      setIsTakingScreenshot(false);\n    }\n  };\n\n  // Handle Screen Scan\n  const handleScreenScan = async () => {\n    try {\n      setIsScanning(true);\n      toast.info('Select the screen/window to scan...');\n\n      // Request screen capture\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          mediaSource: 'screen'\n        }\n      });\n\n      // Create video element to capture frame\n      const video = document.createElement('video');\n      video.srcObject = stream;\n      video.play();\n\n      // Wait for video to be ready\n      await new Promise(resolve => {\n        video.onloadedmetadata = resolve;\n      });\n\n      // Capture screenshot\n      const canvas = document.createElement('canvas');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0);\n\n      // Stop the stream\n      stream.getTracks().forEach(track => track.stop());\n\n      // Convert to base64 and send to OCR\n      const imageData = canvas.toDataURL('image/png');\n      const response = await axios.post(`${API}/ocr-image`, {\n        image_base64: imageData\n      });\n      setQuestion(response.data.extracted_text);\n      toast.success('Screen scanned and text extracted!');\n      setIsScanning(false);\n    } catch (error) {\n      console.error('Screen scan error:', error);\n      toast.error('Failed to scan screen: ' + error.message);\n      setIsScanning(false);\n    }\n  };\n\n  // Handle audio recording\n  const toggleRecording = () => {\n    if (!recognitionRef.current) {\n      toast.error('Speech recognition not supported in this browser');\n      return;\n    }\n    if (isRecording) {\n      recognitionRef.current.stop();\n      setIsRecording(false);\n      if (transcript) {\n        setQuestion(transcript);\n      }\n    } else {\n      setTranscript('');\n      recognitionRef.current.start();\n      setIsRecording(true);\n      toast.success('Listening...');\n    }\n  };\n\n  // Solve the coding problem\n  const handleSolve = async () => {\n    if (!question.trim()) {\n      toast.error('Please enter a question');\n      return;\n    }\n    setLoading(true);\n    setSolution('');\n    try {\n      const response = await axios.post(`${API}/solve-code`, {\n        question: question.trim(),\n        model_provider: modelProvider,\n        model_name: modelName,\n        session_id: sessionId.current\n      });\n      setSolution(response.data.solution);\n      toast.success('Solution generated!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error solving problem:', error);\n      toast.error('Failed to generate solution: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Copy solution to clipboard\n  const handleCopy = () => {\n    navigator.clipboard.writeText(solution);\n    toast.success('Copied to clipboard!');\n  };\n  const modelOptions = {\n    openai: ['gpt-5', 'gpt-5-mini', 'gpt-4o', 'gpt-4o-mini'],\n    anthropic: ['claude-4-sonnet-20250514', 'claude-3-7-sonnet-20250219', 'claude-3-5-sonnet-20241022'],\n    gemini: ['gemini-2.5-pro', 'gemini-2.5-flash', 'gemini-2.0-flash'],\n    deepseek: ['deepseek-chat', 'deepseek-coder', 'deepseek-r1']\n  };\n  if (isMinimized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable-window\",\n      style: {\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n        width: '200px',\n        height: '50px',\n        opacity: opacity\n      },\n      onMouseDown: handleMouseDown,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"window-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"window-title\",\n          children: \"Code Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"window-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn\",\n            onClick: () => setIsMinimized(false),\n            \"data-testid\": \"maximize-btn\",\n            children: /*#__PURE__*/_jsxDEV(Maximize2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: windowRef,\n    className: \"draggable-window\",\n    style: {\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n      width: `${size.width}px`,\n      height: `${size.height}px`,\n      opacity: opacity\n    },\n    onMouseDown: handleMouseDown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"window-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"window-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDFAF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), \"Code Assistant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"window-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transparency-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.3\",\n            max: \"1\",\n            step: \"0.1\",\n            value: opacity,\n            onChange: e => setOpacity(parseFloat(e.target.value)),\n            className: \"transparency-slider\",\n            \"data-testid\": \"opacity-slider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setIsMinimized(true),\n          \"data-testid\": \"minimize-btn\",\n          children: /*#__PURE__*/_jsxDEV(Minimize2, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => window.location.reload(),\n          \"data-testid\": \"close-btn\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"window-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-btn ${activeTab === 'text' ? 'active' : ''}`,\n            onClick: () => setActiveTab('text'),\n            \"data-testid\": \"text-tab\",\n            children: [/*#__PURE__*/_jsxDEV(Type, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), \" Text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-btn ${activeTab === 'screenshot' ? 'active' : ''}`,\n            onClick: () => setActiveTab('screenshot'),\n            \"data-testid\": \"screenshot-tab\",\n            children: [/*#__PURE__*/_jsxDEV(Camera, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), \" Screenshot\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-btn ${activeTab === 'voice' ? 'active' : ''}`,\n            onClick: () => setActiveTab('voice'),\n            \"data-testid\": \"voice-tab\",\n            children: [isRecording ? /*#__PURE__*/_jsxDEV(MicOff, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 53\n            }, this), \" Voice\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-btn ${activeTab === 'scan' ? 'active' : ''}`,\n            onClick: () => setActiveTab('scan'),\n            \"data-testid\": \"scan-tab\",\n            children: [/*#__PURE__*/_jsxDEV(Scan, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), \" Scan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), activeTab === 'text' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea-input\",\n            placeholder: \"Paste your coding question here...\",\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            \"data-testid\": \"question-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), activeTab === 'screenshot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"screenshot-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"screenshot-btn\",\n              onClick: handleTakeScreenshot,\n              disabled: isTakingScreenshot,\n              \"data-testid\": \"take-screenshot-btn\",\n              children: isTakingScreenshot ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this), \"Capturing...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Camera, {\n                  size: 32\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"screenshot-text\",\n                  children: \"Take Screenshot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"screenshot-hint\",\n                  children: \"Capture coding question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), question && /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea-input\",\n            style: {\n              marginTop: '12px'\n            },\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            \"data-testid\": \"screenshot-text-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), activeTab === 'voice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `record-btn ${isRecording ? 'recording' : ''}`,\n              onClick: toggleRecording,\n              \"data-testid\": \"record-btn\",\n              children: isRecording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(MicOff, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 23\n                }, this), \"Stop Recording\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Mic, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 23\n                }, this), \"Start Recording\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), (transcript || question) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-box\",\n            \"data-testid\": \"transcript-box\",\n            children: isRecording ? transcript : question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), activeTab === 'scan' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scan-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"scan-btn\",\n              onClick: handleScreenScan,\n              disabled: isScanning,\n              \"data-testid\": \"scan-screen-btn\",\n              children: isScanning ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this), \"Scanning...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Scan, {\n                  size: 32\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scan-text\",\n                  children: \"Scan Screen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scan-hint\",\n                  children: \"Capture entire screen or window\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), question && /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"textarea-input\",\n            style: {\n              marginTop: '12px'\n            },\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            \"data-testid\": \"scanned-text-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"model-select\",\n          value: modelProvider,\n          onChange: e => {\n            setModelProvider(e.target.value);\n            setModelName(modelOptions[e.target.value][0]);\n          },\n          \"data-testid\": \"provider-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"openai\",\n            children: \"OpenAI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"anthropic\",\n            children: \"Anthropic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gemini\",\n            children: \"Google Gemini\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"deepseek\",\n            children: \"DeepSeek\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"model-select\",\n          value: modelName,\n          onChange: e => setModelName(e.target.value),\n          \"data-testid\": \"model-select\",\n          children: modelOptions[modelProvider].map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model,\n            children: model\n          }, model, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"solve-btn\",\n        onClick: handleSolve,\n        disabled: loading,\n        \"data-testid\": \"solve-btn\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), \"Generating Solution...\"]\n        }, void 0, true) : '⚡ Generate Solution'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        \"data-testid\": \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output-title\",\n            children: \"Solution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy-btn\",\n            onClick: handleCopy,\n            \"data-testid\": \"copy-btn\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solution-text\",\n          \"data-testid\": \"solution-text\",\n          children: solution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this), !solution && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-solution\",\n        children: \"Enter a question and click Generate Solution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(InterviewAssistant, \"w+PIGC78mxjq6904cIPiVHt/0bY=\");\n_c = InterviewAssistant;\nexport default InterviewAssistant;\nvar _c;\n$RefreshReg$(_c, \"InterviewAssistant\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Mic","MicOff","Camera","Type","Maximize2","Minimize2","X","Scan","axios","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","API","InterviewAssistant","_s","position","setPosition","x","y","size","setSize","width","height","opacity","setOpacity","isDragging","setIsDragging","dragOffset","setDragOffset","isMinimized","setIsMinimized","activeTab","setActiveTab","question","setQuestion","solution","setSolution","loading","setLoading","modelProvider","setModelProvider","modelName","setModelName","isRecording","setIsRecording","transcript","setTranscript","isScanning","setIsScanning","isTakingScreenshot","setIsTakingScreenshot","recognitionRef","windowRef","sessionId","Date","now","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","onresult","event","interimTranscript","finalTranscript","i","resultIndex","results","length","transcriptPiece","isFinal","prev","onerror","console","error","handleMouseDown","e","target","closest","clientX","clientY","handleMouseMove","handleMouseUp","document","addEventListener","removeEventListener","handleTakeScreenshot","info","stream","navigator","mediaDevices","getDisplayMedia","video","mediaSource","createElement","srcObject","play","Promise","resolve","onloadedmetadata","canvas","videoWidth","videoHeight","ctx","getContext","drawImage","getTracks","forEach","track","stop","imageData","toDataURL","response","post","image_base64","data","extracted_text","success","message","handleScreenScan","toggleRecording","start","handleSolve","trim","model_provider","model_name","session_id","_error$response","_error$response$data","detail","handleCopy","clipboard","writeText","modelOptions","openai","anthropic","gemini","deepseek","className","style","left","top","onMouseDown","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","type","min","max","step","value","onChange","parseFloat","location","reload","placeholder","disabled","marginTop","map","model","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Assessify/frontend/src/components/InterviewAssistant.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Mic, MicOff, Camera, Type, Maximize2, Minimize2, X, Scan } from 'lucide-react';\r\nimport axios from 'axios';\r\nimport { toast } from 'sonner';\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\r\nconst API = `${BACKEND_URL}/api`;\r\n\r\nconst InterviewAssistant = () => {\r\n  const [position, setPosition] = useState({ x: 100, y: 100 });\r\n  const [size, setSize] = useState({ width: 450, height: 600 });\r\n  const [opacity, setOpacity] = useState(0.95);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  \r\n  const [activeTab, setActiveTab] = useState('text');\r\n  const [question, setQuestion] = useState('');\r\n  const [solution, setSolution] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const [modelProvider, setModelProvider] = useState('openai');\r\n  const [modelName, setModelName] = useState('gpt-5');\r\n  \r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [isTakingScreenshot, setIsTakingScreenshot] = useState(false);\r\n  \r\n  const recognitionRef = useRef(null);\r\n  const windowRef = useRef(null);\r\n  const sessionId = useRef(`session_${Date.now()}`);\r\n\r\n  // Initialize Speech Recognition\r\n  useEffect(() => {\r\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      recognitionRef.current = new SpeechRecognition();\r\n      recognitionRef.current.continuous = true;\r\n      recognitionRef.current.interimResults = true;\r\n      \r\n      recognitionRef.current.onresult = (event) => {\r\n        let interimTranscript = '';\r\n        let finalTranscript = '';\r\n        \r\n        for (let i = event.resultIndex; i < event.results.length; i++) {\r\n          const transcriptPiece = event.results[i][0].transcript;\r\n          if (event.results[i].isFinal) {\r\n            finalTranscript += transcriptPiece + ' ';\r\n          } else {\r\n            interimTranscript += transcriptPiece;\r\n          }\r\n        }\r\n        \r\n        setTranscript(prev => prev + finalTranscript);\r\n      };\r\n      \r\n      recognitionRef.current.onerror = (event) => {\r\n        console.error('Speech recognition error', event.error);\r\n        toast.error('Speech recognition error: ' + event.error);\r\n        setIsRecording(false);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  // Dragging handlers\r\n  const handleMouseDown = (e) => {\r\n    if (e.target.closest('.window-header')) {\r\n      setIsDragging(true);\r\n      setDragOffset({\r\n        x: e.clientX - position.x,\r\n        y: e.clientY - position.y\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging) {\r\n      setPosition({\r\n        x: e.clientX - dragOffset.x,\r\n        y: e.clientY - dragOffset.y\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n      return () => {\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n        document.removeEventListener('mouseup', handleMouseUp);\r\n      };\r\n    }\r\n  }, [isDragging, dragOffset]);\r\n\r\n  // Handle Screenshot\r\n  const handleTakeScreenshot = async () => {\r\n    try {\r\n      setIsTakingScreenshot(true);\r\n      toast.info('Select the window to capture...');\r\n      \r\n      // Request screen capture\r\n      const stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: { mediaSource: 'screen' }\r\n      });\r\n      \r\n      // Create video element to capture frame\r\n      const video = document.createElement('video');\r\n      video.srcObject = stream;\r\n      video.play();\r\n      \r\n      // Wait for video to be ready\r\n      await new Promise(resolve => {\r\n        video.onloadedmetadata = resolve;\r\n      });\r\n      \r\n      // Capture screenshot\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(video, 0, 0);\r\n      \r\n      // Stop the stream\r\n      stream.getTracks().forEach(track => track.stop());\r\n      \r\n      // Convert to base64 and send to OCR\r\n      const imageData = canvas.toDataURL('image/png');\r\n      \r\n      const response = await axios.post(`${API}/ocr-image`, {\r\n        image_base64: imageData\r\n      });\r\n      \r\n      setQuestion(response.data.extracted_text);\r\n      toast.success('Screenshot captured and text extracted!');\r\n      setIsTakingScreenshot(false);\r\n    } catch (error) {\r\n      console.error('Screenshot error:', error);\r\n      toast.error('Failed to capture screenshot: ' + error.message);\r\n      setIsTakingScreenshot(false);\r\n    }\r\n  };\r\n\r\n  // Handle Screen Scan\r\n  const handleScreenScan = async () => {\r\n    try {\r\n      setIsScanning(true);\r\n      toast.info('Select the screen/window to scan...');\r\n      \r\n      // Request screen capture\r\n      const stream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: { mediaSource: 'screen' }\r\n      });\r\n      \r\n      // Create video element to capture frame\r\n      const video = document.createElement('video');\r\n      video.srcObject = stream;\r\n      video.play();\r\n      \r\n      // Wait for video to be ready\r\n      await new Promise(resolve => {\r\n        video.onloadedmetadata = resolve;\r\n      });\r\n      \r\n      // Capture screenshot\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.drawImage(video, 0, 0);\r\n      \r\n      // Stop the stream\r\n      stream.getTracks().forEach(track => track.stop());\r\n      \r\n      // Convert to base64 and send to OCR\r\n      const imageData = canvas.toDataURL('image/png');\r\n      \r\n      const response = await axios.post(`${API}/ocr-image`, {\r\n        image_base64: imageData\r\n      });\r\n      \r\n      setQuestion(response.data.extracted_text);\r\n      toast.success('Screen scanned and text extracted!');\r\n      setIsScanning(false);\r\n    } catch (error) {\r\n      console.error('Screen scan error:', error);\r\n      toast.error('Failed to scan screen: ' + error.message);\r\n      setIsScanning(false);\r\n    }\r\n  };\r\n\r\n  // Handle audio recording\r\n  const toggleRecording = () => {\r\n    if (!recognitionRef.current) {\r\n      toast.error('Speech recognition not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (isRecording) {\r\n      recognitionRef.current.stop();\r\n      setIsRecording(false);\r\n      if (transcript) {\r\n        setQuestion(transcript);\r\n      }\r\n    } else {\r\n      setTranscript('');\r\n      recognitionRef.current.start();\r\n      setIsRecording(true);\r\n      toast.success('Listening...');\r\n    }\r\n  };\r\n\r\n  // Solve the coding problem\r\n  const handleSolve = async () => {\r\n    if (!question.trim()) {\r\n      toast.error('Please enter a question');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setSolution('');\r\n\r\n    try {\r\n      const response = await axios.post(`${API}/solve-code`, {\r\n        question: question.trim(),\r\n        model_provider: modelProvider,\r\n        model_name: modelName,\r\n        session_id: sessionId.current\r\n      });\r\n      \r\n      setSolution(response.data.solution);\r\n      toast.success('Solution generated!');\r\n    } catch (error) {\r\n      console.error('Error solving problem:', error);\r\n      toast.error('Failed to generate solution: ' + (error.response?.data?.detail || error.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Copy solution to clipboard\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(solution);\r\n    toast.success('Copied to clipboard!');\r\n  };\r\n\r\n  const modelOptions = {\r\n    openai: ['gpt-5', 'gpt-5-mini', 'gpt-4o', 'gpt-4o-mini'],\r\n    anthropic: ['claude-4-sonnet-20250514', 'claude-3-7-sonnet-20250219', 'claude-3-5-sonnet-20241022'],\r\n    gemini: ['gemini-2.5-pro', 'gemini-2.5-flash', 'gemini-2.0-flash'],\r\n    deepseek: ['deepseek-chat', 'deepseek-coder', 'deepseek-r1']\r\n  };\r\n\r\n  if (isMinimized) {\r\n    return (\r\n      <div\r\n        className=\"draggable-window\"\r\n        style={{\r\n          left: `${position.x}px`,\r\n          top: `${position.y}px`,\r\n          width: '200px',\r\n          height: '50px',\r\n          opacity: opacity\r\n        }}\r\n        onMouseDown={handleMouseDown}\r\n      >\r\n        <div className=\"window-header\">\r\n          <div className=\"window-title\">Code Assistant</div>\r\n          <div className=\"window-controls\">\r\n            <button className=\"control-btn\" onClick={() => setIsMinimized(false)} data-testid=\"maximize-btn\">\r\n              <Maximize2 size={16} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={windowRef}\r\n      className=\"draggable-window\"\r\n      style={{\r\n        left: `${position.x}px`,\r\n        top: `${position.y}px`,\r\n        width: `${size.width}px`,\r\n        height: `${size.height}px`,\r\n        opacity: opacity\r\n      }}\r\n      onMouseDown={handleMouseDown}\r\n    >\r\n      <div className=\"window-header\">\r\n        <div className=\"window-title\">\r\n          <span>🎯</span>\r\n          Code Assistant\r\n        </div>\r\n        <div className=\"window-controls\">\r\n          <div className=\"transparency-control\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0.3\"\r\n              max=\"1\"\r\n              step=\"0.1\"\r\n              value={opacity}\r\n              onChange={(e) => setOpacity(parseFloat(e.target.value))}\r\n              className=\"transparency-slider\"\r\n              data-testid=\"opacity-slider\"\r\n            />\r\n          </div>\r\n          <button className=\"control-btn\" onClick={() => setIsMinimized(true)} data-testid=\"minimize-btn\">\r\n            <Minimize2 size={16} />\r\n          </button>\r\n          <button className=\"control-btn\" onClick={() => window.location.reload()} data-testid=\"close-btn\">\r\n            <X size={16} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"window-content\">\r\n        {/* Input Tabs */}\r\n        <div className=\"input-section\">\r\n          <div className=\"tabs\">\r\n            <button\r\n              className={`tab-btn ${activeTab === 'text' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('text')}\r\n              data-testid=\"text-tab\"\r\n            >\r\n              <Type size={16} /> Text\r\n            </button>\r\n            <button\r\n              className={`tab-btn ${activeTab === 'screenshot' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('screenshot')}\r\n              data-testid=\"screenshot-tab\"\r\n            >\r\n              <Camera size={16} /> Screenshot\r\n            </button>\r\n            <button\r\n              className={`tab-btn ${activeTab === 'voice' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('voice')}\r\n              data-testid=\"voice-tab\"\r\n            >\r\n              {isRecording ? <MicOff size={16} /> : <Mic size={16} />} Voice\r\n            </button>\r\n            <button\r\n              className={`tab-btn ${activeTab === 'scan' ? 'active' : ''}`}\r\n              onClick={() => setActiveTab('scan')}\r\n              data-testid=\"scan-tab\"\r\n            >\r\n              <Scan size={16} /> Scan\r\n            </button>\r\n          </div>\r\n\r\n          {/* Text Input */}\r\n          {activeTab === 'text' && (\r\n            <div className=\"input-container\">\r\n              <textarea\r\n                className=\"textarea-input\"\r\n                placeholder=\"Paste your coding question here...\"\r\n                value={question}\r\n                onChange={(e) => setQuestion(e.target.value)}\r\n                data-testid=\"question-textarea\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Screenshot */}\r\n          {activeTab === 'screenshot' && (\r\n            <div className=\"input-container\">\r\n              <div className=\"screenshot-container\">\r\n                <button\r\n                  className=\"screenshot-btn\"\r\n                  onClick={handleTakeScreenshot}\r\n                  disabled={isTakingScreenshot}\r\n                  data-testid=\"take-screenshot-btn\"\r\n                >\r\n                  {isTakingScreenshot ? (\r\n                    <>\r\n                      <div className=\"spinner\" />\r\n                      Capturing...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Camera size={32} />\r\n                      <div className=\"screenshot-text\">Take Screenshot</div>\r\n                      <div className=\"screenshot-hint\">Capture coding question</div>\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {question && (\r\n                <textarea\r\n                  className=\"textarea-input\"\r\n                  style={{ marginTop: '12px' }}\r\n                  value={question}\r\n                  onChange={(e) => setQuestion(e.target.value)}\r\n                  data-testid=\"screenshot-text-textarea\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Voice Recording */}\r\n          {activeTab === 'voice' && (\r\n            <div className=\"input-container\">\r\n              <div className=\"audio-controls\">\r\n                <button\r\n                  className={`record-btn ${isRecording ? 'recording' : ''}`}\r\n                  onClick={toggleRecording}\r\n                  data-testid=\"record-btn\"\r\n                >\r\n                  {isRecording ? (\r\n                    <>\r\n                      <MicOff size={16} />\r\n                      Stop Recording\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Mic size={16} />\r\n                      Start Recording\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {(transcript || question) && (\r\n                <div className=\"transcript-box\" data-testid=\"transcript-box\">\r\n                  {isRecording ? transcript : question}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Screen Scan */}\r\n          {activeTab === 'scan' && (\r\n            <div className=\"input-container\">\r\n              <div className=\"scan-container\">\r\n                <button\r\n                  className=\"scan-btn\"\r\n                  onClick={handleScreenScan}\r\n                  disabled={isScanning}\r\n                  data-testid=\"scan-screen-btn\"\r\n                >\r\n                  {isScanning ? (\r\n                    <>\r\n                      <div className=\"spinner\" />\r\n                      Scanning...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Scan size={32} />\r\n                      <div className=\"scan-text\">Scan Screen</div>\r\n                      <div className=\"scan-hint\">Capture entire screen or window</div>\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {question && (\r\n                <textarea\r\n                  className=\"textarea-input\"\r\n                  style={{ marginTop: '12px' }}\r\n                  value={question}\r\n                  onChange={(e) => setQuestion(e.target.value)}\r\n                  data-testid=\"scanned-text-textarea\"\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Model Selector */}\r\n        <div className=\"model-selector\">\r\n          <select\r\n            className=\"model-select\"\r\n            value={modelProvider}\r\n            onChange={(e) => {\r\n              setModelProvider(e.target.value);\r\n              setModelName(modelOptions[e.target.value][0]);\r\n            }}\r\n            data-testid=\"provider-select\"\r\n          >\r\n            <option value=\"openai\">OpenAI</option>\r\n            <option value=\"anthropic\">Anthropic</option>\r\n            <option value=\"gemini\">Google Gemini</option>\r\n            <option value=\"deepseek\">DeepSeek</option>\r\n          </select>\r\n          <select\r\n            className=\"model-select\"\r\n            value={modelName}\r\n            onChange={(e) => setModelName(e.target.value)}\r\n            data-testid=\"model-select\"\r\n          >\r\n            {modelOptions[modelProvider].map(model => (\r\n              <option key={model} value={model}>{model}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Solve Button */}\r\n        <button\r\n          className=\"solve-btn\"\r\n          onClick={handleSolve}\r\n          disabled={loading}\r\n          data-testid=\"solve-btn\"\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <div className=\"spinner\" />\r\n              Generating Solution...\r\n            </>\r\n          ) : (\r\n            '⚡ Generate Solution'\r\n          )}\r\n        </button>\r\n\r\n        {/* Output Section */}\r\n        {solution && (\r\n          <div className=\"output-section\" data-testid=\"output-section\">\r\n            <div className=\"output-header\">\r\n              <div className=\"output-title\">Solution</div>\r\n              <button className=\"copy-btn\" onClick={handleCopy} data-testid=\"copy-btn\">\r\n                Copy\r\n              </button>\r\n            </div>\r\n            <div className=\"solution-text\" data-testid=\"solution-text\">{solution}</div>\r\n          </div>\r\n        )}\r\n\r\n        {!solution && !loading && (\r\n          <div className=\"no-solution\">Enter a question and click Generate Solution</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterviewAssistant;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}